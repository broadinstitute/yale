// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

type Client_Expecter struct {
	mock *mock.Mock
}

func (_m *Client) EXPECT() *Client_Expecter {
	return &Client_Expecter{mock: &_m.Mock}
}

// WriteSecret provides a mock function with given fields: owner, repo, secretName, requiredByDependabot, content
func (_m *Client) WriteSecret(owner string, repo string, secretName string, requiredByDependabot bool, content []byte) error {
	ret := _m.Called(owner, repo, secretName, requiredByDependabot, content)

	if len(ret) == 0 {
		panic("no return value specified for WriteSecret")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, bool, []byte) error); ok {
		r0 = rf(owner, repo, secretName, requiredByDependabot, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Client_WriteSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteSecret'
type Client_WriteSecret_Call struct {
	*mock.Call
}

// WriteSecret is a helper method to define mock.On call
//   - owner string
//   - repo string
//   - secretName string
//   - requiredByDependabot bool
//   - content []byte
func (_e *Client_Expecter) WriteSecret(owner interface{}, repo interface{}, secretName interface{}, requiredByDependabot interface{}, content interface{}) *Client_WriteSecret_Call {
	return &Client_WriteSecret_Call{Call: _e.mock.On("WriteSecret", owner, repo, secretName, requiredByDependabot, content)}
}

func (_c *Client_WriteSecret_Call) Run(run func(owner string, repo string, secretName string, requiredByDependabot bool, content []byte)) *Client_WriteSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string), args[3].(bool), args[4].([]byte))
	})
	return _c
}

func (_c *Client_WriteSecret_Call) Return(_a0 error) *Client_WriteSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Client_WriteSecret_Call) RunAndReturn(run func(string, string, string, bool, []byte) error) *Client_WriteSecret_Call {
	_c.Call.Return(run)
	return _c
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
