// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	v1beta1 "github.com/broadinstitute/yale/internal/yale/crd/clientset/v1beta1"
	mock "github.com/stretchr/testify/mock"
)

// YaleCRDInterface is an autogenerated mock type for the YaleCRDInterface type
type YaleCRDInterface struct {
	mock.Mock
}

type YaleCRDInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *YaleCRDInterface) EXPECT() *YaleCRDInterface_Expecter {
	return &YaleCRDInterface_Expecter{mock: &_m.Mock}
}

// GcpSaKeys provides a mock function with given fields:
func (_m *YaleCRDInterface) GcpSaKeys() v1beta1.GcpSaKeyInterface {
	ret := _m.Called()

	var r0 v1beta1.GcpSaKeyInterface
	if rf, ok := ret.Get(0).(func() v1beta1.GcpSaKeyInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta1.GcpSaKeyInterface)
		}
	}

	return r0
}

// YaleCRDInterface_GcpSaKeys_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GcpSaKeys'
type YaleCRDInterface_GcpSaKeys_Call struct {
	*mock.Call
}

// GcpSaKeys is a helper method to define mock.On call
func (_e *YaleCRDInterface_Expecter) GcpSaKeys() *YaleCRDInterface_GcpSaKeys_Call {
	return &YaleCRDInterface_GcpSaKeys_Call{Call: _e.mock.On("GcpSaKeys")}
}

func (_c *YaleCRDInterface_GcpSaKeys_Call) Run(run func()) *YaleCRDInterface_GcpSaKeys_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *YaleCRDInterface_GcpSaKeys_Call) Return(_a0 v1beta1.GcpSaKeyInterface) *YaleCRDInterface_GcpSaKeys_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewYaleCRDInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewYaleCRDInterface creates a new instance of YaleCRDInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewYaleCRDInterface(t mockConstructorTestingTNewYaleCRDInterface) *YaleCRDInterface {
	mock := &YaleCRDInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
